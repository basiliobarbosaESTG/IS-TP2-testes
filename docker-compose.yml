

services:

  # Database to store XML data
  db-xml2:
    container_name: db-xml2
    build: images/db/xml
    volumes:
      - xml-data:/var/lib/postgresql/shared-data/
    ports:
      - "${EXP_PORT_PG_XML}:5432"

  # Database to store Relational data
  db-rel2:
    container_name: db-rel2
    build: images/db/rel
    volumes:
      - rel-data:/var/lib/postgresql/shared-data/
    ports:
      - "${EXP_PORT_PG_REL}:5432"

  # Container that automatically converts CSV to XML and then imports the XML to db-xml
  importer2:
    container_name: importer2
    build: images/python
    volumes:
      - ./src/daemon/importer:/usr/src/app
      - ./volumes/shared:/shared
      - ./volumes/csv:/csv
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
    depends_on:
      - db-xml2

  # Container that automatically migrates data from db-xml to db-rel
  migrator2:
    container_name: migrator2
    build: images/python
    volumes:
      - ./src/daemon/migrator:/usr/src/app
      - ./volumes/shared:/shared
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      POLLING_FREQ: ${POLLING_FREQ}
    depends_on:
      - db-xml2
      - db-rel2

  # Container that automatically migrates data from db-xml to db-rel
  gis-updater2:
    container_name: gis-updater2
    build: images/python
    volumes:
      - ./src/daemon/gis-updater:/usr/src/app
      - ./volumes/shared:/shared
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      POLLING_FREQ: ${POLLING_FREQ}
      ENTITIES_PER_ITERATION: ${ENTITIES_PER_ITERATION}
    depends_on:
      - api-gis2
      - api-entities2

  # Container that runs the RPC server
  rpc-server2:
    container_name: rpc-server2
    build: images/python
    volumes:
      - ./src/server/rpc:/usr/src/app
      - ./volumes/shared:/shared
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      RPC_SERVER_PORT: ${RPC_SERVER_PORT}
    depends_on:
      - db-xml2

  # Container that runs the web interface for displaying entities
  frontend-ent2:
    container_name: frontend-ent2
    build: images/web
    volumes:
      - ./src/frontend/ent:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_FRONTEND_ENT}:${EXT_PORT_FRONTEND_ENT}"
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      WEB_PORT: ${EXT_PORT_FRONTEND_ENT}
      API_ENTITIES_URL: "localhost:${EXT_PORT_API_ENTITIES}"
    depends_on:
      - api-entities2

  # Container that runs the web interface for displaying the map
  frontend-gis2:
    container_name: frontend-gis2
    build: images/web
    volumes:
      - ./src/frontend/gis:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_FRONTEND_GIS}:${EXT_PORT_FRONTEND_GIS}"
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      WEB_PORT: ${EXT_PORT_FRONTEND_GIS}
      API_GIS_URL: "localhost:${EXT_PORT_API_GIS}"
    depends_on:
      - api-gis2

  # Container that runs the web interface for displaying the map
  frontend-proc2:
    container_name: frontend-proc2
    build: images/web
    volumes:
      - ./src/frontend/proc:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_FRONTEND_PROC}:${EXT_PORT_FRONTEND_PROC}"
    environment:
      USE_DEV_MODE: ${USE_DEV_MODE}
      WEB_PORT: ${EXT_PORT_FRONTEND_PROC}
      API_GRAPHQL_URL: "localhost:${EXT_PORT_API_GRAPHQL}"
      API_PROC_URL: "localhost:${EXT_PORT_API_PROC}"
    depends_on:
      - api-proc2
      - api-graphql2

  # Container that runs the API for entities
  api-entities2:
    container_name: api-entities2
    build: images/python
    volumes:
      - ./src/api/entities:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_API_ENTITIES}:${API_PORT}"
    environment:
      API_PORT: ${API_PORT}

  # Container that runs the API for gis
  api-gis2:
    container_name: api-gis2
    build: images/python
    volumes:
      - ./src/api/gis:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_API_GIS}:${API_PORT}"
    environment:
      API_PORT: ${API_PORT}

  # Container that runs the API for procedures
  api-proc2:
    container_name: api-proc2
    build: images/python
    volumes:
      - ./src/api/proc:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_API_PROC}:${API_PORT}"
    environment:
      API_PORT: ${API_PORT}

  # Container that runs the API for graphql
  api-graphql2:
    container_name: api-graphql2
    build: images/python
    volumes:
      - ./src/api/graphql:/usr/src/app
      - ./volumes/shared:/shared
    ports:
      - "${EXT_PORT_API_GRAPHQL}:${API_PORT}"
    environment:
      API_PORT: ${API_PORT}

volumes:
  xml-data:
  rel-data:
